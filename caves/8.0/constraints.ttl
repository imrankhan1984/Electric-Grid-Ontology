# baseURI: http://sv.cmu.edu/AWP/8.0/constraints
# imports: http://spinrdf.org/spl
# imports: http://sv.cmu.edu/AWP/8.0/props

@prefix arg: <http://spinrdf.org/arg#> .
@prefix constraints: <http://sv.cmu.edu/AWP/8.0/constraints#> .
@prefix fn: <http://www.w3.org/2005/xpath-functions#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sp: <http://spinrdf.org/sp#> .
@prefix spif: <http://spinrdf.org/spif#> .
@prefix spin: <http://spinrdf.org/spin#> .
@prefix spl: <http://spinrdf.org/spl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://sv.cmu.edu/AWP/8.0/constraints>
  rdf:type owl:Ontology ;
  owl:imports <http://spinrdf.org/spl> ;
  owl:imports <http://sv.cmu.edu/AWP/8.0/props> ;
  owl:versionInfo "Created with TopBraid Composer"^^xsd:string ;
.
<http://sv.cmu.edu/AWP/8.0/props#Combined-Elements-noduprows>
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "ascs"^^xsd:string ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#actorServiceCompositionService> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "002 No specification of Actor, Service, or ServiceComposition."^^xsd:string ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            rdf:type sp:NotExists ;
            sp:elements (
                [
                  sp:object [
                      sp:varName "hierarchy"^^xsd:string ;
                    ] ;
                  sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
                  sp:subject spin:_this ;
                ]
              ) ;
          ]
        ) ;
      rdfs:comment "001 No hierarchy specification was found."^^xsd:string ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            sp:object [
                sp:varName "entity"^^xsd:string ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#actorServiceCompositionService> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:lowerCase ;
                sp:arg1 [
                    sp:varName "entity"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "entityLowerCase"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:and ;
                sp:arg1 [
                    rdf:type sp:and ;
                    sp:arg1 [
                        rdf:type sp:and ;
                        sp:arg1 [
                            rdf:type sp:not ;
                            sp:arg1 [
                                rdf:type fn:ends-with ;
                                sp:arg1 [
                                    sp:varName "entityLowerCase"^^xsd:string ;
                                  ] ;
                                sp:arg2 "service" ;
                              ] ;
                          ] ;
                        sp:arg2 [
                            rdf:type sp:not ;
                            sp:arg1 [
                                rdf:type fn:ends-with ;
                                sp:arg1 [
                                    sp:varName "entityLowerCase"^^xsd:string ;
                                  ] ;
                                sp:arg2 "contract" ;
                              ] ;
                          ] ;
                      ] ;
                    sp:arg2 [
                        rdf:type sp:not ;
                        sp:arg1 [
                            rdf:type fn:ends-with ;
                            sp:arg1 [
                                sp:varName "entityLowerCase"^^xsd:string ;
                              ] ;
                            sp:arg2 "composition" ;
                          ] ;
                      ] ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:not ;
                    sp:arg1 [
                        rdf:type fn:contains ;
                        sp:arg1 [
                            sp:varName "entityLowerCase"^^xsd:string ;
                          ] ;
                        sp:arg2 "actor" ;
                      ] ;
                  ] ;
              ] ;
          ]
        ) ;
      rdfs:comment "004 Invalid specification of Actor, Service, or ServiceComposition."^^xsd:string ;
    ] ;
  spin:constraint [
      rdf:type sp:Ask ;
      sp:where (
          [
            sp:object [
                sp:varName "hierarchy"^^xsd:string ;
              ] ;
            sp:predicate <http://sv.cmu.edu/AWP/8.0/props#hierarchyConceptualLogicalPhysical> ;
            sp:subject spin:_this ;
          ]
          [
            rdf:type sp:Bind ;
            sp:expression [
                rdf:type spif:lowerCase ;
                sp:arg1 [
                    sp:varName "hierarchy"^^xsd:string ;
                  ] ;
              ] ;
            sp:variable [
                sp:varName "hierarchyLowerCase"^^xsd:string ;
              ] ;
          ]
          [
            rdf:type sp:Filter ;
            sp:expression [
                rdf:type sp:and ;
                sp:arg1 [
                    rdf:type sp:and ;
                    sp:arg1 [
                        rdf:type sp:and ;
                        sp:arg1 [
                            rdf:type sp:not ;
                            sp:arg1 [
                                rdf:type fn:contains ;
                                sp:arg1 [
                                    sp:varName "hierarchyLowerCase"^^xsd:string ;
                                  ] ;
                                sp:arg2 "conceptual" ;
                              ] ;
                          ] ;
                        sp:arg2 [
                            rdf:type sp:not ;
                            sp:arg1 [
                                rdf:type fn:contains ;
                                sp:arg1 [
                                    sp:varName "hierarchyLowerCase"^^xsd:string ;
                                  ] ;
                                sp:arg2 "logical" ;
                              ] ;
                          ] ;
                      ] ;
                    sp:arg2 [
                        rdf:type sp:not ;
                        sp:arg1 [
                            rdf:type fn:contains ;
                            sp:arg1 [
                                sp:varName "hierarchyLowerCase"^^xsd:string ;
                              ] ;
                            sp:arg2 "physical" ;
                          ] ;
                      ] ;
                  ] ;
                sp:arg2 [
                    rdf:type sp:not ;
                    sp:arg1 [
                        rdf:type fn:contains ;
                        sp:arg1 [
                            sp:varName "hierarchyLowerCase"^^xsd:string ;
                          ] ;
                        sp:arg2 "implementation" ;
                      ] ;
                  ] ;
              ] ;
          ]
        ) ;
      rdfs:comment "003 Invalid hierarchy specification."^^xsd:string ;
    ] ;
.
